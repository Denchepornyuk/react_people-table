{"version":3,"sources":["Home.js","Filter.js","Person.js","PeopleTable.js","PeoplePage.js","App.js","index.js"],"names":["Home","react_default","a","createElement","Filter","_ref","handleSearch","query","className","htmlFor","type","id","value","onChange","autoComplete","Person","people","history","match","location","selectText","selectedText","data","text","String","toLowerCase","includes","result","i","length","str","slice","push","map","person","key","name","cn","sex","concat","Math","ceil","died","selected","replace","params","onClick","pathname","search","handlePerson","Object","values","born","PeopleTable","URLSearchParams","sortBy","get","sortedPople","order","toConsumableArray","sort","b","localeCompare","border","item","column","set","toString","src_Person","PeoplePage","peopleData","objectSpread2","age","century","sortPeople","filter","_ref2","mother","father","src_PeopleTable","src_Filter","event","target","App","react_router_dom","to","exact","react_router","path","component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.92e347c6.chunk.js","sourcesContent":["import React from 'react';\n\nconst Home = () => (\n  <h1>Home Page</h1>\n);\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ handleSearch, query }) => (\n  <div className=\"table__sort\">\n    <label htmlFor=\"search\">\n      Search\n      <input\n        type=\"text\"\n        id=\"search\"\n        value={query}\n        onChange={handleSearch}\n        className=\"sort__input\"\n        autoComplete=\"off\"\n      />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  handleSearch: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nconst Person = ({ people, history, match, location, selectText }) => {\n  const selectedText = (data) => {\n    const text = selectText;\n\n    if (!text || !String(data).toLowerCase().includes(text)) {\n      return data;\n    }\n\n    if (!data) {\n      return '';\n    }\n\n    const result = [];\n\n    for (let i = 0; i < data.length; i += 1) {\n      const str = data.slice(i, i + text.length);\n\n      if (str.toLowerCase() === text) {\n        result.push(<span className=\"select--text\">{str}</span>);\n        i += str.length - 1;\n      } else {\n        result.push(data[i]);\n      }\n    }\n\n    return result;\n  };\n\n  const handlePerson = person => (\n    history.push({\n      pathname: `/people/${person.name.toLowerCase().replace(/ /g, '_')}`,\n      search: location.search,\n    })\n  );\n\n  return (\n    people.map(person => (\n      <tr\n        key={person.name}\n        className={\n          cn(person.sex === 'm' ? 'person--male' : 'person--female',\n            `Person--lived-in-${Math.ceil(person.died / 100)}`,\n            { selected: person.name.toLowerCase().replace(/ /g, '_')\n              === match.params.person })}\n        onClick={() => handlePerson(person)}\n      >\n        {Object.values(person).map(data => (\n          data === person.name\n            ? (\n              <td className={person.born < 1650 ? 'person--born' : ''}>\n                {selectedText(data)}\n              </td>\n            )\n            : <td>{selectedText(data)}</td>\n        ))}\n      </tr>\n    ))\n  );\n};\n\nPerson.propTypes = {\n  people: PropTypes.arrayOf.isRequired,\n  selectText: PropTypes.string.isRequired,\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Person from './Person';\n\nconst PeopleTable = ({ people, history, location, match, selectText }) => {\n  const search = new URLSearchParams(location.search);\n  const sortBy = search.get('sortBy');\n  let sortedPople = people;\n\n  const sortTable = (column) => {\n    if (search.get('sortBy') === column\n      && search.get('sortOrder') === 'asc') {\n      search.set('sortOrder', 'desc');\n    } else {\n      search.set('sortOrder', 'asc');\n    }\n\n    search.set('sortBy', column);\n    history.push({ search: search.toString() });\n  };\n\n  if (sortBy) {\n    const order = search.get('sortOrder') === 'desc' ? -1 : 1;\n\n    sortedPople = [...people].sort((a, b) => {\n      switch (typeof a[sortBy]) {\n        case 'string':\n          return a[sortBy].localeCompare(b[sortBy]) * order;\n        case 'number':\n          return (a[sortBy] - b[sortBy]) * order;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  const head = [\n    'id', 'name', 'sex', 'born', 'died', 'father', 'mother', 'age',\n  ];\n\n  return (\n    <table\n      border=\"1\"\n      className=\"people-table\"\n    >\n      <thead>\n        <tr>\n          {head.map(item => (\n            <th\n              key={item}\n              onClick={() => sortTable(item)}\n            >\n              {item}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {<Person\n          people={sortedPople}\n          history={history}\n          match={match}\n          location={location}\n          selectText={selectText}\n        />}\n      </tbody>\n    </table>\n  );\n};\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf.isRequired,\n  history: PropTypes.objectOf.isRequired,\n  location: PropTypes.objectOf.isRequired,\n  match: PropTypes.objectOf.isRequired,\n  selectText: PropTypes.string.isRequired,\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Filter from './Filter';\nimport PeopleTable from './PeopleTable';\nimport people from './people';\n\nconst PeoplePage = ({ history, location, match }) => {\n  const search = new URLSearchParams(location.search);\n  let query = search.get('query');\n  const peopleData = people.map(item => ({\n    ...item,\n    age: item.died - item.born,\n    century: Math.ceil(item.died / 100),\n  }));\n\n  let sortPeople = peopleData;\n\n  if (query) {\n    query = query.toLowerCase();\n    sortPeople = peopleData.filter(({ name, mother, father }) => (\n      (name + mother + father).toLowerCase().includes(query)\n    ));\n  }\n\n  const handleSearch = (event) => {\n    search.set('query', event.target.value);\n    history.push({ search: search.toString() });\n  };\n\n  return (\n    <div>\n      <h1>People table</h1>\n      <p>{`number of people - ${sortPeople.length}`}</p>\n      <PeopleTable\n        people={sortPeople}\n        history={history}\n        location={location}\n        match={match}\n        selectText={query}\n      />\n      <Filter\n        handleSearch={handleSearch}\n        query={query}\n      />\n    </div>\n  );\n};\n\nPeoplePage.propTypes = {\n  history: PropTypes.objectOf.isRequired,\n  location: PropTypes.objectOf.isRequired,\n  match: PropTypes.objectOf.isRequired,\n};\n\nexport default PeoplePage;\n","import React from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport './App.css';\nimport Home from './Home';\nimport PeoplePage from './PeoplePage';\n\nconst App = () => (\n  <div className=\"App\">\n    <Link to=\"/\" exact className=\"table__link\">Home</Link>\n    <Link to=\"/people\" className=\"table__link\">People</Link>\n\n    <Route path=\"/\" exact component={Home} />\n    <Route path=\"/people/:person?\" component={PeoplePage} />\n\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}